DROP TABLE GRADE;
DROP TABLE SECTION;
DROP TABLE COURSE;
DROP TABLE STUDENT;
DROP TABLE DEPARTMENT;

-- Create table - DEPARTMENT
CREATE TABLE DEPARTMENT (
    DNAME VARCHAR(30) NOT NULL,
    DEPARTMENT_CODE INT NOT NULL,
    OFFICE_NUMBER INT NOT NULL,
    OFFICE_PHONE INT NOT NULL,
    COLLEGE VARCHAR(20) NOT NULL,
    PRIMARY KEY (DEPARTMENT_CODE)
);

-- Create table - STUDENT
CREATE TABLE STUDENT (
    FIRST_NAME VARCHAR(15) NOT NULL,
    LAST_NAME VARCHAR(15) NOT NULL,
    STUDENT_NUMBER INT NOT NULL,
    HONG_KONG_ID CHAR(10) NOT NULL,
    STREET_ADDRESS VARCHAR(50) NOT NULL,
    DISTRICT VARCHAR(15),
    REGION VARCHAR(15),
    PHONE_NUMBER INT,
    BIRTHDAY DATE,
    SEX CHAR(1),
    COHORT INT NOT NULL,
    MAJOR_DEPARTMENT INT NOT NULL,
    MINOR_DEPARTMENT INT,
    DEGREE_PROGRAM CHAR(5) NOT NULL,
    PRIMARY KEY (STUDENT_NUMBER),
    FOREIGN KEY (MAJOR_DEPARTMENT) REFERENCES DEPARTMENT(DEPARTMENT_CODE),
    FOREIGN KEY (MINOR_DEPARTMENT) REFERENCES DEPARTMENT(DEPARTMENT_CODE)
);

-- Create table - COURSE
CREATE TABLE COURSE (
    COURSE_NAME VARCHAR(30) NOT NULL,
    C_DESCRIPTION VARCHAR(255),
    COURSE_NUMBER INT NOT NULL,
    NUMBER_OF_SEMESTER_HOURS INT NOT NULL,
    C_LEVEL INT NOT NULL,
    OFFERING_DEPARTMENT INT NOT NULL,
    PRIMARY KEY (COURSE_NUMBER),
    FOREIGN KEY (OFFERING_DEPARTMENT) REFERENCES DEPARTMENT(DEPARTMENT_CODE)
);

-- Create table - SECTION
CREATE TABLE SECTION (
    INSTRUCTOR VARCHAR(30),
    SEMESTER VARCHAR(15) NOT NULL,
    S_YEAR INT NOT NULL,
    CNUMBER INT NOT NULL,
    SECTION_NUMBER INT NOT NULL,
    PRIMARY KEY (SEMESTER, S_YEAR, CNUMBER, SECTION_NUMBER),
    FOREIGN KEY (CNUMBER) REFERENCES COURSE(COURSE_NUMBER)
);

-- Create table - GRADE
CREATE TABLE GRADE (
    S_NUMBER INT NOT NULL,
    SEM VARCHAR(15) NOT NULL,
    Y_NUM INT NOT NULL,
    CNUM INT NOT NULL,
    SEC_NUMBER INT NOT NULL,
    LETTER_GRADE CHAR(1) NOT NULL,
    NUMERIC_GRADE INT NOT NULL,
    PRIMARY KEY (S_NUMBER, SEM, Y_NUM, CNUM, SEC_NUMBER),
    FOREIGN KEY (S_NUMBER) REFERENCES STUDENT(STUDENT_NUMBER),
    FOREIGN KEY (SEM, Y_NUM, CNUM, SEC_NUMBER) REFERENCES SECTION(SEMESTER, S_YEAR, CNUMBER, SECTION_NUMBER)
);

-- create Index
CREATE INDEX idx_student_number ON STUDENT(STUDENT_NUMBER);
CREATE INDEX idx_course_number ON COURSE(COURSE_NUMBER);
CREATE INDEX idx_grade_student ON GRADE(S_NUMBER);
CREATE INDEX idx_grade_course ON GRADE(CNUM);

-- insert records into DEPARTMENT
INSERT INTO DEPARTMENT VALUES ('COMPUTER_SCIENCE', 0001, 6302, 34428580, 'ENGINEERING');
INSERT INTO DEPARTMENT VALUES ('FINANCE', 0010, 9200, 34428808, 'BUSINESS');
INSERT INTO DEPARTMENT VALUES ('CREATIVE_MEDIA', 0011, 7056, 34428049, 'CREATIVE_MEDIA');
INSERT INTO DEPARTMENT VALUES ('LAW', 0100, 6101, 34428008, 'LAW');
INSERT INTO DEPARTMENT VALUES ('CHEMISTRY', 0101, 6708, 34427404, 'SCIENCE');
INSERT INTO DEPARTMENT VALUES ('PUBLIC_POLICY', 0110, 5320, 34420180, 'ARTS_AND_SOC_SCIENCE');

-- insert records into STUDENT
INSERT INTO STUDENT VALUES 
('SHANSHAN', 'WU', 57833245, 'F479582', 'CORNWALL_STREET', 'HALL11', NULL, 34235123, '2003-12-17', 'F', 2021, 0001, NULL, 'BSC'),
('JUN', 'YU', 55371245, 'F897744', 'SALISBURY_ROAD', NULL, '3452A', 34345623, '2000-02-20', 'F', 2018, 0010, 0101, 'BF'),
('WEIQI', 'LI', 56634218, 'F794068', 'CORNWALL_STREET', 'HALL6', NULL, 83957385, '2002-09-26', 'F', 2020, 0110, NULL, 'BA'),
('RYE', 'WATSON', 56900501, 'F081546', 'CORNWALL_STREET', 'HALL3', NULL, 90650212, '2002-09-26', 'F', 2021, 0011, 0110, 'BSC'),
('CHRIS', 'QI', 58572235, 'M405592', 'CORNWALL_STREET', 'HALL3', NULL, 43787283, '2004-03-21', 'M', 2022, 0001, NULL, 'BSC');

-- insert records into COURSE
INSERT INTO COURSE VALUES ('DATA_STRUCTRES',NULL,2303,3,2,0001);
INSERT INTO COURSE VALUES ('AI_GAME','GREAT',4386,3,4,0011);
INSERT INTO COURSE VALUES ('DATA_MGT','PERFECT',2403,3,2,0001);
INSERT INTO COURSE VALUES ('CATONESE',NULL,2031,0,2,0110);

-- insert records into SECTION
INSERT INTO SECTION VALUES ('LU','B',2023,2303,01);
INSERT INTO SECTION VALUES ('LAM','B',2023,2403,01);
INSERT INTO SECTION VALUES ('LAM','B',2024,2403,02);
INSERT INTO SECTION VALUES ('HENG','A',2022,2031,03);
INSERT INTO SECTION VALUES ('CHEUNG','A',2022,2031,04);
INSERT INTO SECTION VALUES ('AU','A',2021,4386,04);

START TRANSACTION;

COMMIT;


-- insert records into GRADE
INSERT INTO GRADE VALUES (57833245,'B',2023,2303,01,'A',4);
INSERT INTO GRADE VALUES (55371245,'A',2022,2031,04,'B',3);
INSERT INTO GRADE VALUES (56634218,'A',2022,2031,03,'A',4);
INSERT INTO GRADE VALUES (56900501,'B',2023,2403,01,'A',4);
INSERT INTO GRADE VALUES (58572235,'B',2024,2403,02,'D',1);


COMMIT;

CREATE VIEW Student_Grade_Report AS 
SELECT S.STUDENT_NUMBER, S.FIRST_NAME, S.LAST_NAME, 
       C.COURSE_NAME, G.LETTER_GRADE, G.NUMERIC_GRADE
FROM STUDENT S
JOIN GRADE G ON S.STUDENT_NUMBER = G.S_NUMBER
JOIN COURSE C ON G.CNUM = C.COURSE_NUMBER;

SELECT STUDENT_NUMBER, FIRST_NAME, LAST_NAME, COHORT, SEX,DNAME
FROM STUDENT,DEPARTMENT
WHERE DEGREE_PROGRAM='BSC' AND COHORT = 2021 AND STUDENT.MAJOR_DEPARTMENT = DEPARTMENT.DEPARTMENT_CODE;


SELECT STUDENT_NUMBER, FIRST_NAME, LAST_NAME, COURSE_NAME, SECTION_NUMBER, LETTER_GRADE, NUMERIC_GRADE
FROM STUDENT,COURSE,SECTION,GRADE
WHERE GRADE.S_NUMBER = STUDENT.STUDENT_NUMBER AND GRADE.SEC_NUMBER = SECTION.SECTION_NUMBER AND SECTION.CNUMBER = COURSE.COURSE_NUMBER AND GRADE.CNUM = COURSE.COURSE_NUMBER AND GRADE.Y_NUM = SECTION.S_YEAR AND GRADE.SEM = SECTION.SEMESTER;

SELECT *
FROM COURSE,DEPARTMENT
WHERE COURSE.OFFERING_DEPARTMENT = DEPARTMENT.DEPARTMENT_CODE;

SELECT STUDENT_NUMBER, FIRST_NAME, LAST_NAME, COHORT, SEX,DNAME
FROM STUDENT,DEPARTMENT
WHERE  STUDENT.MAJOR_DEPARTMENT = DEPARTMENT.DEPARTMENT_CODE
ORDER BY MINOR_DEPARTMENT NULLS FIRST;

SELECT STUDENT_NUMBER, FIRST_NAME, LAST_NAME,STREET_ADDRESS,DISTRICT,REGION 
FROM STUDENT
WHERE  SEX = 'F'
ORDER BY COHORT;

-- Ranking
SELECT S.STUDENT_NUMBER, S.FIRST_NAME, S.LAST_NAME, 
       C.COURSE_NAME, G.LETTER_GRADE, G.NUMERIC_GRADE,
       RANK() OVER (PARTITION BY C.COURSE_NAME ORDER BY G.NUMERIC_GRADE DESC) AS Rank,
       AVG(G.NUMERIC_GRADE) OVER (PARTITION BY C.COURSE_NAME) AS Avg_Grade
FROM STUDENT S
JOIN GRADE G ON S.STUDENT_NUMBER = G.S_NUMBER
JOIN COURSE C ON G.CNUM = C.COURSE_NUMBER;
